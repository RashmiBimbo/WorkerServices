// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqlIntegrationServices;

#nullable disable

namespace SubledgerVoucherGeneralJournalEntryEntitiesService.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    partial class ServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SqlIntegrationServices.AllProductsTestR", b =>
                {
                    b.Property<string>("ProductNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDateTime1")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSearchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductNumber");

                    b.ToTable("AllProductsTestR");
                });

            modelBuilder.Entity("SqlIntegrationServices.SubledgerVoucherGeneralJournalEntryEntitiesTestR", b =>
                {
                    b.Property<string>("Voucher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("RecId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GeneralJournalEntry")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDateTime1")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Partition1")
                        .HasColumnType("bigint");

                    b.Property<int?>("RecVersion1")
                        .HasColumnType("int");

                    b.Property<long?>("SubledgerJournalEntry")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferId")
                        .HasColumnType("bigint");

                    b.Property<string>("VoucherDataAreaId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Voucher", "RecId1");

                    b.ToTable("SubledgerVoucherGeneralJournalEntryEntitiesTestR");
                });

            modelBuilder.Entity("SqlIntegrationServices.UnitOfMeasureConversionsTestR", b =>
                {
                    b.Property<string>("FromUnitSymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ToUnitSymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Denominator")
                        .HasColumnType("int");

                    b.Property<int>("Factor")
                        .HasColumnType("int");

                    b.Property<int>("InnerOffset")
                        .HasColumnType("int");

                    b.Property<int>("Numerator")
                        .HasColumnType("int");

                    b.Property<string>("Etag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OuterOffset")
                        .HasColumnType("int");

                    b.Property<string>("Rounding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FromUnitSymbol", "ToUnitSymbol");

                    b.ToTable("UnitOfMeasureConversionsTestR");
                });
#pragma warning restore 612, 618
        }
    }
}
