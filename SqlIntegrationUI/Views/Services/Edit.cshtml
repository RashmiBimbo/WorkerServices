@model ServiceDetail

@{
    ViewData["Title"] = "Edit";
}
@* <style>
    #txtQS {
        resize: both; /* Allows stretching in both directions */
        overflow: auto; /* Adds scrollbars if needed */
    }</style> *@
<div runat="server" class="form-horizontal">
    <div runat="server" class="form-group">
        <br />
        <h1>Edit</h1>
        <h4>@Model.Name Service</h4>
        <hr />
        <form asp-controller="Services" asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-switch">
                <label class="form-check-label">
                    <input class="form-check-input" type="checkbox" id="RBRun" asp-for="Enable" runat="Server" /> @Html.DisplayNameFor(model => model.Enable)
                </label>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <br />
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <label asp-for="Period" class="control-label"></label>
                    <input asp-for="Period" class="form-control" name="Period" />
                    <span asp-validation-for="Period" class="text-danger"></span>
                </div>
                <br />
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <label asp-for="Table" class="control-label"></label>
                    <input asp-for="Table" class="form-control" />
                    <span asp-validation-for="Table" class="text-danger"></span>
                </div>
                <br />
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <label asp-for="Endpoint" class="control-label"></label>
                    <input asp-for="Endpoint" class="form-control" />
                    <span asp-validation-for="Endpoint" class="text-danger"></span>
                </div>
            </div>
            @* <br /> *@
            <div class="row">
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <label asp-for="QueryString" class="control-label">Query String</label>
                    <textarea id="txtQS" asp-for="QueryString" class="form-control" rows="1" data-val="false"></textarea>
                </div>
            </div>
            <br />
            <br />
            <legend>Columns</legend>
            @*    <div class="row">
            <div class="col-lg-3 col-md-4 col-sm-6">
            <select asp-items="@ViewData["ColumnList"] as SelectList" id="DdlColNames" runat="server" class="form-select" name="colsearch">
            <option class="dropdown-item" value="">All</option>
            </select>
            </div>
            <div class="col-lg-3 col-md-4 col-sm-6">
            <input type="hidden" name="name" value="@Model.Name" />
            <input type="button" value="View" class="btn btn-primary" asp-action="Edit" id="ViewBtn" />
            </div>
            </div> *@
            <br />
            <table class="table table-hover table-bordered table-responsive table-group-divider">
                @{
                    SelectList colList = ViewData["FiltrdColumnList"] as SelectList;
                    <thead>
                        <tr>
                            <th>Sno</th>
                            <th scope="col">@Html.DisplayNameFor(model => model!.Columns![0].Name)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model!.Columns![0].Include)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!(colList is null))
                        {
                            int cnt = colList.Count();
                            List<Column> lst = Model.Columns;
                            for (int i = 0; i < cnt; i++)
                            {
                                var item = colList.ElementAt(i);
                                Column column = lst.First(col => col.Name == item.Text);
                                int indx = lst.IndexOf(column);
                                <tr>
                                    <td> @(i + 1)</td>
                                    <td>
                                        <input type="hidden" asp-for="@Model!.Columns[indx].Name" value="@Model.Columns[indx].Name" />
                                        @item.Text
                                    </td>
                                    <td>
                                        <input class="form-check-input" type="checkbox" asp-for="@Model!.Columns![indx]!.Include"
                                               checked="@Model!.Columns![indx]!.Include" />
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                }
            </table>

            <input type="hidden" name="CreatedBy" value="@Model.CreatedBy" />
            <input type="hidden" name="CreatedDate" value="@Model.CreatedDate" />
            <input type="hidden" name="ModifiedBy" value="@Model.ModifiedBy" />
            <input type="hidden" name="ModifiedDate" value="@Model.ModifiedDate" />
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" asp-action="Edit" asp-route-name="@Model.Name" />
                <input type="button" value="Cancel" class="btn btn-outline-secondary" asp-action="Index" id="CancelBtn" asp-controller="Services" />
            </div>
        </form>
    </div>
</div>

<script>
    document.getElementById("CancelBtn").
    addEventListener("click", function () {
        window.location.href =
        '@Url.Action("Index", "Services")';
        });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
